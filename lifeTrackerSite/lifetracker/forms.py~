import datetime as dt
from django import forms
from django.core import validators
from django.contrib.auth.models import User
from lifetracker.models import Label, Event

class RegistrationForm(forms.Form):
    username = forms.CharField(required=True)
    email = forms.EmailField(required=True)
    password = forms.CharField(widget=forms.PasswordInput())
    password1 = forms.CharField(widget=forms.PasswordInput())
    
    def isValidUsername(self, field_data, all_data):
        try:
            User.objects.get(username=field_data)
        except User.DoesNotExist:
            return
        raise validators.ValidationError('The username "%s" is already taken.' % field_data)
    
class LoginForm(forms.Form):
    username = forms.CharField(required=True)
    password = forms.CharField(widget=forms.PasswordInput())

class AddEventForm(forms.Form):
    name = forms.CharField(required=True)
    label = forms.CharField(required=True)
    datetime = forms.DateTimeField(required=True, initial=dt.datetime.now())
    description = forms.CharField(required=False)

    def __init__(self, *args, **kwargs):
        request = kwargs.pop('request', None)
        super(AddEventForm, self).__init__(*args, **kwargs)

        if request:
            print request.user.profile.events.all()
            self.fields['link'] = forms.ModelChoiceField(queryset=request.user.profile.events.all(), required=False)

    

class ForgotAccountForm(forms.Form):
    email = forms.EmailField(required=True)
